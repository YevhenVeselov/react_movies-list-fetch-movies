{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","query","setQuery","setMovie","isError","setIsError","isLoading","setIsLoading","count","setCount","movieToAdd","Title","Plot","Poster","imdbID","onSubmit","e","preventDefault","prev","fetch","then","res","json","catch","Response","Error","getMovie","response","Object","hasOwn","error","console","log","finally","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","find","m","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f61954e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nconst DEFAULT_IMAGE_URL\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl !== 'N/A' ? movie.imgUrl : DEFAULT_IMAGE_URL}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<MovieData | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const imdbBaseUrl = 'https://www.imdb.com/title/';\n\n  const movieToAdd = {\n    title: movie?.Title,\n    description: movie?.Plot,\n    imgUrl: movie?.Poster,\n    imdbUrl: imdbBaseUrl + movie?.imdbID,\n    imdbId: movie?.imdbID,\n  };\n\n  const handleMovieSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    setCount(prev => prev + 1);\n\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if (Object.hasOwn(response, 'Error')) {\n          setIsError(true);\n        } else {\n          setMovie(response as MovieData);\n        }\n      })\n      // eslint-disable-next-line no-console\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleMovieAdd = () => {\n    setCount(0);\n    setMovie(null);\n    setQuery('');\n\n    onAddMovie(movieToAdd as Movie);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleMovieSearch}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                { 'is-danger': isError },\n              )}\n              value={query}\n              onChange={e => {\n                setQuery(e.target.value);\n                setIsError(false);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              {count === 0\n                ? 'Find a movie'\n                : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            movie={movieToAdd as Movie}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=9bc18dd3';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    const isExist = movies.find(m => m.imdbId === movie.imdbId);\n\n    if (!isExist) {\n      setMovies(prevMovies => ([\n        ...prevMovies,\n        movie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}